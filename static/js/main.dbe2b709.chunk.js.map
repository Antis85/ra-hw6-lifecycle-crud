{"version":3,"sources":["components/AddNoteForm.js","components/Note.js","components/NotesPanelClass.js","App.js","index.js"],"names":["AddNoteForm","props","input","onChange","onSubmit","className","name","value","type","required","placeholder","Note","note","id","content","onRemove","onClick","NotesPanelClass","state","notes","fetchApiGetNotes","fetch","process","then","response","json","result","setState","prevState","fetchApiAddNote","method","headers","body","JSON","stringify","fetchApiRemoveNote","handleChange","target","handleSubmit","evt","preventDefault","ok","handleRemove","handleRefresh","this","notesList","map","item","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qVAIe,SAASA,EAAYC,GAAQ,IAClCC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,SAAUC,EAAaH,EAAbG,SAEzB,OACE,sBAAMC,UAAU,cAAcD,SAAUA,EAAxC,SACE,qBAAKC,UAAU,6BAAf,SACE,qBAAKA,UAAU,yCAAf,SACE,wBAAOA,UAAU,+BAAjB,UACE,0CACA,uBACEA,UAAU,+BACVC,KAAK,OACLC,MAAOL,EACPM,KAAK,OACLC,UAAQ,EACRC,YAAY,mEACZP,SAAUA,IAEZ,wBACEE,UAAU,0CACVG,KAAK,SAFP,SAIE,sBAAMH,UAAU,iBAAhB,6B,MCtBC,SAASM,EAAKV,GAAQ,IAAD,EAI9BA,EAFFW,KAAQC,EAFwB,EAExBA,GAAIC,EAFoB,EAEpBA,QACZC,EACEd,EADFc,SAGF,OACE,sBAAKV,UAAU,eAAeQ,GAAIA,EAAlC,UACE,qBAAKR,UAAU,YAAf,SACE,4BAAIS,MAEN,wBACET,UAAU,mCACVW,QAAS,kBAAMD,EAASF,IAF1B,SAIE,sBAAMR,UAAU,iBAAhB,wB,UCdaY,E,4MACnBC,MAAQ,CACNhB,MAAO,GACPiB,MAAO,I,EAGTC,iBAAmB,WACjB,OAAOC,MAAMC,0CACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,UAAS,SAACC,GAAD,mBAAC,eAAoBA,GAArB,IAAgCT,MAAOO,W,EAI3DG,gBAAkB,WAChB,OAAOR,MAAMC,yCAA2B,CACtCQ,OAAQ,OACRC,QAAS,CACP,eAAgB,kCAElBC,KAAMC,KAAKC,UAAU,CAAErB,GAAI,IAAKC,QAAS,EAAKI,MAAMhB,W,EAIxDiC,mBAAqB,SAACtB,GACpB,OAAOQ,MAAMC,0CAAkCT,EAAI,CACjDiB,OAAQ,Y,EAIZM,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OAChB,EAAKV,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZ1B,MAAOmC,EAAO9B,Y,EAIlB+B,aAAe,SAACC,GACdA,EAAIC,iBACJ,EAAKX,kBAAkBN,MAAK,SAACC,GACtBA,EAASiB,IACd,EAAKrB,sBAGP,EAAKO,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZ1B,MAAO,S,EAIXwC,aAAe,SAAC7B,GACd,EAAKsB,mBAAmBtB,GAAIU,MAAK,SAACC,GAC3BA,EAASiB,IACd,EAAKrB,uB,EAITuB,cAAgB,WACd,EAAKvB,oB,uDAGP,WACEwB,KAAKxB,qB,oBAGP,WAAU,IAAD,OACDyB,EAAYD,KAAK1B,MAAMC,MAAM2B,KAAI,SAACC,GAAD,OACrC,cAAC,EAAD,CAAoBnC,KAAMmC,EAAMhC,SAAU,EAAK2B,cAApCK,EAAKlC,OAGlB,OACE,qCACE,sBAAKR,UAAU,sBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,yCAEF,wBACEA,UAAU,4CACVW,QAAS4B,KAAKD,cAFhB,SAIE,sBAAMtC,UAAU,iBAAhB,uBAGJ,yBAASA,UAAU,yBAAnB,SAA6CwC,IAC7C,cAAC,EAAD,CACE3C,MAAO0C,KAAK1B,MAAMhB,MAClBC,SAAUyC,KAAKR,aACfhC,SAAUwC,KAAKN,sB,GAvFoBU,aCF9B,SAASC,IACtB,OAAO,qBAAK5C,UAAU,MAAf,SACL,cAAC,EAAD,MCAJ6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dbe2b709.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './AddNoteForm.css';\n\nexport default function AddNoteForm(props) {\n  const { input, onChange, onSubmit } = props;\n\n  return (\n    <form className=\"AddNoteForm\" onSubmit={onSubmit}>\n      <div className=\"AddNoteForm-inputs-wrapper\">\n        <div className=\"AddNoteForm-input-wrapper note-wrapper\">\n          <label className=\"AddNoteForm-label label-note\">\n            <h2>New note</h2>\n            <input\n              className=\"AddNoteForm-input input-note\"\n              name=\"note\"\n              value={input}\n              type=\"text\"\n              required\n              placeholder=\"Например, Lorem ipsum...\"\n              onChange={onChange}\n            />\n            <button\n              className=\"AddNoteForm-button-submit button-submit\"\n              type=\"submit\"\n            >\n              <span className=\"material-icons\">send</span>\n            </button>\n          </label>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nAddNoteForm.propTypes = {\n  input: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Note.css';\n\nexport default function Note(props) {\n  const {\n    note: { id, content },\n    onRemove,\n  } = props;\n\n  return (\n    <div className=\"Note-wrapper\" id={id}>\n      <div className=\"Note-text\">\n        <p>{content}</p>\n      </div>\n      <button\n        className=\"Note-button-remove button-remove\"\n        onClick={() => onRemove(id)}\n      >\n        <span className=\"material-icons\">close</span>\n      </button>\n    </div>\n  );\n}\n\nNote.propTypes = {\n  note: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    content: PropTypes.string.isRequired,\n  }).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport AddNoteForm from './AddNoteForm';\nimport Note from './Note';\nimport './NotesPanelClass.css';\n\nexport default class NotesPanelClass extends Component {\n  state = {\n    input: '',\n    notes: [],\n  };\n\n  fetchApiGetNotes = () => {\n    return fetch(process.env.REACT_APP_URL)\n      .then((response) => response.json())\n      .then((result) => {\n        this.setState((prevState) => ({ ...prevState, notes: result }));\n      });\n  };\n\n  fetchApiAddNote = () => {\n    return fetch(process.env.REACT_APP_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8',\n      },\n      body: JSON.stringify({ id: '0', content: this.state.input }),\n    });\n  };\n\n  fetchApiRemoveNote = (id) => {\n    return fetch(process.env.REACT_APP_URL + '/' + id, {\n      method: 'DELETE',\n    });\n  };\n\n  handleChange = ({ target }) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      input: target.value,\n    }));\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    this.fetchApiAddNote().then((response) => {\n      if (!response.ok) return;\n      this.fetchApiGetNotes();\n    });\n\n    this.setState((prevState) => ({\n      ...prevState,\n      input: '',\n    }));\n  };\n\n  handleRemove = (id) => {\n    this.fetchApiRemoveNote(id).then((response) => {\n      if (!response.ok) return;\n      this.fetchApiGetNotes();\n    });\n  };\n\n  handleRefresh = () => {\n    this.fetchApiGetNotes();\n  };\n\n  componentDidMount() {\n    this.fetchApiGetNotes();\n  }\n\n  render() {\n    const notesList = this.state.notes.map((item) => (\n      <Note key={item.id} note={item} onRemove={this.handleRemove} />\n    ));\n\n    return (\n      <>\n        <div className=\"Notes-panel_wrapper\">\n          <div className=\"Notes-panel_text\">\n            <h1>Notes</h1>\n          </div>\n          <button\n            className=\"Notes-panel_button-refresh button-refresh\"\n            onClick={this.handleRefresh}\n          >\n            <span className=\"material-icons\">sync</span>\n          </button>\n        </div>\n        <section className=\"Notes-panel_notes-body\">{notesList}</section>\n        <AddNoteForm\n          input={this.state.input}\n          onChange={this.handleChange}\n          onSubmit={this.handleSubmit}\n        />\n      </>\n    );\n  }\n}\n","import './App.css';\nimport NotesPanelClass from './components/NotesPanelClass';\n\nexport default function App() {\n  return <div className=\"App\">\n    <NotesPanelClass />\n  </div>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}